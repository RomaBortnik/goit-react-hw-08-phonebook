{"version":3,"file":"static/js/510.cace3b3c.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.jsx","redux/filter/selectors.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsForm\":\"ContactForm_contactsForm__6k3Pf\",\"contactsFormLabel\":\"ContactForm_contactsFormLabel__2TlDU\",\"contactsFormInput\":\"ContactForm_contactsFormInput__jGZ7D\",\"contactsFormBtn\":\"ContactForm_contactsFormBtn__+ADVC\"};","import { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { Formik, Field, Form } from 'formik';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { getContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport css from './ContactForm.module.css';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleSubmit = (values, { resetForm }) => {\n    const { name, number } = values;\n    const nameToLowerCase = name.toLowerCase();\n    const equalEl = contacts.find(\n      contact => contact.name.toLowerCase() === nameToLowerCase\n    );\n    if (equalEl) {\n      return toast.error(`${name} is already in contact list`);\n    } else {\n      dispatch(addContact({ name, number }));\n      toast.success(`${name} successfully added to the contact list.`);\n      resetForm();\n    }\n  };\n\n  const {\n    contactsForm,\n    contactsFormLabel,\n    contactsFormInput,\n    contactsFormBtn,\n  } = css;\n\n  return (\n    <>\n      <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n        <Form className={contactsForm}>\n          <label className={contactsFormLabel} htmlFor=\"name\">\n            Name\n            <Field\n              className={contactsFormInput}\n              type=\"text\"\n              name=\"name\"\n              id=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </label>\n          <label className={contactsFormLabel} htmlFor=\"number\">\n            Number\n            <Field\n              className={contactsFormInput}\n              type=\"tel\"\n              name=\"number\"\n              id=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </label>\n\n          <button className={contactsFormBtn} type=\"submit\">\n            Add contact\n          </button>\n        </Form>\n      </Formik>\n      <ToastContainer autoClose={2000} theme=\"dark\" />\n    </>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsFormInput\":\"Filter_contactsFormInput__vCrrj\",\"contactsListLabel\":\"Filter_contactsListLabel__7hOKb\"};","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/slice';\n\nimport css from './Filter.module.css';\n\nconst Filter = () => {\n  const { contactsListLabel, contactsFormInput } = css;\n  const dispatch = useDispatch();\n  return (\n    <label className={contactsListLabel}>\n      Find contacts by name\n      <input\n        onChange={e => dispatch(setFilter(e.target.value))}\n        className={contactsFormInput}\n        type=\"text\"\n        name=\"filter\"\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsListItem\":\"ContactListItem_contactsListItem__dmJLK\",\"contactsListBtn\":\"ContactListItem_contactsListBtn__Pbf4t\"};","import { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { deleteContact } from 'redux/contacts/operations';\nimport css from './ContactListItem.module.css';\n\nconst ContactListItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n  return (\n    <>\n      <li className={css.contactsListItem}>\n        {name}: {number}\n        <button\n          className={css.contactsListBtn}\n          onClick={() => {\n            toast.success(`${name} removed from the contact list.`);\n            dispatch(deleteContact(id));\n          }}\n          type=\"button\"\n        >\n          Delete\n        </button>\n      </li>\n      <ToastContainer autoClose={2000} theme=\"dark\" />\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default ContactListItem;\n","export const contactsListFilter = ({ contacts: { items }, filter }) => {\n  if (!filter) {\n    return items;\n  }\n  const filterToLowerCase = filter.toLowerCase();\n  return items.filter(contact =>\n    contact.name.toLowerCase().includes(filterToLowerCase)\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"ContactList_contactsList__7leRd\"};","import { useSelector } from 'react-redux';\n\nimport ContactListItem from 'components/ContactListItem';\nimport { contactsListFilter } from 'redux/filter/selectors';\nimport css from './ContactList.module.css';\n\nconst ContactList = () => {\n  const filteredContactsList = useSelector(contactsListFilter);\n\n  return (\n    <ul className={css.contactsList}>\n      {filteredContactsList.map(({ name, number, id }) => (\n        <ContactListItem\n          key={id}\n          name={name}\n          number={number}\n          id={id}\n        ></ContactListItem>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\n\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\nimport Loader from 'components/Loader';\nimport defaultImage from '../../images/defaultImage.png';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { getIsLoading, getError } from 'redux/contacts/selectors';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoading && !error && <Loader />}\n      {error && <img src={defaultImage} alt=\"Something went wrong\"></img>}\n      {!error && (\n        <>\n          <h1 className=\"title\">Phonebook</h1>\n          <ContactForm></ContactForm>\n          <h2 className=\"title\">Contacts</h2>\n          <Filter></Filter>\n          <ContactList></ContactList>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["getContacts","state","contacts","items","getIsLoading","isLoading","getError","error","initialValues","name","number","dispatch","useDispatch","useSelector","contactsForm","css","contactsFormLabel","contactsFormInput","contactsFormBtn","_jsxs","_Fragment","children","_jsx","Formik","onSubmit","values","_ref","resetForm","nameToLowerCase","toLowerCase","find","contact","toast","concat","addContact","Form","className","htmlFor","Field","type","id","pattern","title","required","ToastContainer","autoClose","theme","contactsListLabel","onChange","e","setFilter","target","value","onClick","deleteContact","contactsListFilter","filter","filterToLowerCase","includes","filteredContactsList","map","ContactListItem","useEffect","fetchContacts","Loader","src","defaultImage","alt","ContactForm","Filter","ContactList"],"sourceRoot":""}