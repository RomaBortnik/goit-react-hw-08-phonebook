{"version":3,"file":"static/js/759.16e7b274.chunk.js","mappings":"uQAKMA,EAAgB,CACpBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAmCZ,EAhCqB,WACnB,IAAMC,GAAWC,EAAAA,EAAAA,MAQjB,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACG,EAAAA,GAAM,CAACT,cAAeA,EAAeU,SARrB,SAACC,EAAMC,GAAqB,IAAjBC,EAASD,EAATC,UACtBZ,EAA0BU,EAA1BV,KAAMC,EAAoBS,EAApBT,MAAOC,EAAaQ,EAAbR,SACrBC,GAASU,EAAAA,EAAAA,IAAS,CAAEb,KAAAA,EAAMC,MAAAA,EAAOC,SAAAA,KACjCU,GACF,EAIiEL,UAC3DO,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAAAR,SAAA,EACHO,EAAAA,EAAAA,MAAA,SAAOE,QAAQ,OAAMT,SAAA,CAAC,YAEpBF,EAAAA,EAAAA,KAACY,EAAAA,GAAK,CAACC,KAAK,OAAOlB,KAAK,OAAOmB,GAAG,OAAOC,UAAQ,QAEnDN,EAAAA,EAAAA,MAAA,SAAOE,QAAQ,QAAOT,SAAA,CAAC,SAErBF,EAAAA,EAAAA,KAACY,EAAAA,GAAK,CAACC,KAAK,QAAQlB,KAAK,QAAQmB,GAAG,QAAQC,UAAQ,QAEtDN,EAAAA,EAAAA,MAAA,SAAOE,QAAQ,WAAUT,SAAA,CAAC,YAExBF,EAAAA,EAAAA,KAACY,EAAAA,GAAK,CAACC,KAAK,WAAWlB,KAAK,WAAWmB,GAAG,WAAWC,UAAQ,QAE/Df,EAAAA,EAAAA,KAAA,UAAQa,KAAK,SAAQX,SAAC,mBAKhC,ECnBA,EAfiB,WACf,IAAQc,GAAUC,EAAAA,EAAAA,KAAVD,MAMR,OALAE,EAAAA,EAAAA,UAAQ,WACFF,GACFG,EAAAA,GAAAA,MAAYH,EAEhB,GAAG,CAACA,KAEFP,EAAAA,EAAAA,MAAAR,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAACoB,EAAY,KACbpB,EAAAA,EAAAA,KAACqB,EAAAA,GAAc,CAACC,UAAW,KAAMC,MAAM,WAG7C,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register/Register.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { Formik, Field, Form } from 'formik';\n\nimport { register } from 'redux/auth/operations';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    const { name, email, password } = values;\n    dispatch(register({ name, email, password }));\n    resetForm();\n  };\n\n  return (\n    <>\n      <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n        <Form>\n          <label htmlFor=\"name\">\n            Username\n            <Field type=\"text\" name=\"name\" id=\"name\" required />\n          </label>\n          <label htmlFor=\"email\">\n            Email\n            <Field type=\"email\" name=\"email\" id=\"email\" required />\n          </label>\n          <label htmlFor=\"password\">\n            Password\n            <Field type=\"password\" name=\"password\" id=\"password\" required />\n          </label>\n          <button type=\"submit\">Register</button>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n\nexport default RegisterForm;\n","import { useAuth } from 'hooks/useAuth';\nimport { useMemo } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport RegisterForm from 'components/RegisterForm';\n\nconst Register = () => {\n  const { error } = useAuth();\n  useMemo(() => {\n    if (error) {\n      toast.error(error);\n    }\n  }, [error]);\n  return (\n    <>\n      <RegisterForm />\n      <ToastContainer autoClose={1500} theme=\"dark\" />\n    </>\n  );\n};\n\nexport default Register;\n"],"names":["initialValues","name","email","password","dispatch","useDispatch","_jsx","_Fragment","children","Formik","onSubmit","values","_ref","resetForm","register","_jsxs","Form","htmlFor","Field","type","id","required","error","useAuth","useMemo","toast","RegisterForm","ToastContainer","autoClose","theme"],"sourceRoot":""}