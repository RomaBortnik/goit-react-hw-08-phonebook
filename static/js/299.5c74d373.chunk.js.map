{"version":3,"file":"static/js/299.5c74d373.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","redux/filter/selectors.js","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const StyledContactForm = styled(Form)`\n  width: 400px;\n  padding: 12px 16px;\n  border-radius: 12px;\n  margin-bottom: 24px;\n  background-color: #e9e9e9;\n`;\n\nexport const ContactFormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 24px;\n  margin-bottom: 30px;\n`;\n\nexport const ContactFormInput = styled(Field)`\n  width: 240px;\n  height: 30px;\n  font-size: 18px;\n  font-weight: 400;\n  border: 1px solid black;\n  border-radius: 4px;\n`;\n\nexport const ContactFormBtn = styled.button`\n  font-size: 18px;\n  padding: 4px 12px;\n  border: 1px solid #e9e9e9;\n  background-color: #fff;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: background-color 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n\n  &:hover {\n    background-color: #e1e1e1;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { Formik } from 'formik';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { getContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport {\n  StyledContactForm,\n  ContactFormLabel,\n  ContactFormInput,\n  ContactFormBtn,\n} from './ContactForm.styled';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleSubmit = (values, { resetForm }) => {\n    const { name, number } = values;\n    const nameToLowerCase = name.toLowerCase();\n    const equalEl = contacts.find(\n      contact => contact.name.toLowerCase() === nameToLowerCase\n    );\n    if (equalEl) {\n      return toast.error(`${name} is already in contact list`);\n    } else {\n      dispatch(addContact({ name, number }));\n      toast.success(`${name} successfully added to the contact list.`);\n      resetForm();\n    }\n  };\n\n  return (\n    <>\n      <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n        <StyledContactForm>\n          <ContactFormLabel htmlFor=\"name\">\n            Name\n            <ContactFormInput\n              type=\"text\"\n              name=\"name\"\n              id=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </ContactFormLabel>\n          <ContactFormLabel htmlFor=\"number\">\n            Number\n            <ContactFormInput\n              type=\"tel\"\n              name=\"number\"\n              id=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </ContactFormLabel>\n          <ContactFormBtn type=\"submit\">Add contact</ContactFormBtn>\n        </StyledContactForm>\n      </Formik>\n      <ToastContainer autoClose={2000} theme=\"dark\" />\n    </>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const FilterInput = styled.input`\n  width: 240px;\n  height: 30px;\n  font-size: 18px;\n  font-weight: 400;\n  border: 1px solid black;\n  border-radius: 4px;\n`;\n\nexport const FilterLabel = styled.label`\n  font-size: 24px;\n  font-weight: 500;\n  display: flex;\n  flex-direction: column;\n`;\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/slice';\n\nimport { FilterInput, FilterLabel } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  return (\n    <FilterLabel>\n      Find contacts by name\n      <FilterInput\n        onChange={e => dispatch(setFilter(e.target.value))}\n        type=\"text\"\n        name=\"filter\"\n      />\n    </FilterLabel>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Contact = styled.li`\n  font-weight: 400;\n  font-size: 20px;\n  padding: 4px 0;\n  display: flex;\n  align-items: center;\n`;\n\nexport const ContactBtn = styled.button`\n  font-size: 14px;\n  padding: 2px 8px;\n  border: 1px solid #e9e9e9;\n  background-color: #fff;\n  border-radius: 8px;\n  cursor: pointer;\n  margin-left: 12px;\n`;\n","import { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { deleteContact } from 'redux/contacts/operations';\nimport { Contact, ContactBtn } from './ContactListItem.styled';\n\nconst ContactListItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n  return (\n    <>\n      <Contact>\n        {name}: {number}\n        <ContactBtn\n          onClick={() => {\n            toast.success(`${name} removed from the contact list.`);\n            dispatch(deleteContact(id));\n          }}\n          type=\"button\"\n        >\n          Delete\n        </ContactBtn>\n      </Contact>\n      <ToastContainer autoClose={2000} theme=\"dark\" />\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default ContactListItem;\n","export const contactsListFilter = ({ contacts: { items }, filter }) => {\n  if (!filter) {\n    return items;\n  }\n  const filterToLowerCase = filter.toLowerCase();\n  return items.filter(contact =>\n    contact.name.toLowerCase().includes(filterToLowerCase)\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledContactList = styled.ul`\n  font-weight: 700;\n  display: flex;\n  flex-direction: column;\n`;\n","import { useSelector } from 'react-redux';\n\nimport ContactListItem from 'components/ContactListItem';\nimport { contactsListFilter } from 'redux/filter/selectors';\nimport { StyledContactList } from './ContactList.styled';\n\nconst ContactList = () => {\n  const filteredContactsList = useSelector(contactsListFilter);\n\n  return (\n    <StyledContactList>\n      {filteredContactsList.map(({ name, number, id }) => (\n        <ContactListItem\n          key={id}\n          name={name}\n          number={number}\n          id={id}\n        ></ContactListItem>\n      ))}\n    </StyledContactList>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const ContactsTitle = styled.h2`\n  font-size: 32px;\n  line-height: 1.5;\n  margin-bottom: 16px;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\n\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\nimport Loader from 'components/Loader';\nimport defaultImage from '../../images/defaultImage.png';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { getIsLoading, getError } from 'redux/contacts/selectors';\nimport { ContactsTitle } from './Contacts.styled';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoading && !error && <Loader />}\n      {error && <img src={defaultImage} alt=\"Something went wrong\"></img>}\n      {!error && (\n        <>\n          <ContactsTitle className=\"title\">Phonebook</ContactsTitle>\n          <ContactForm />\n          <ContactsTitle className=\"title\">Contacts</ContactsTitle>\n          <Filter />\n          <ContactList />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["getContacts","state","contacts","items","getIsLoading","isLoading","getError","error","StyledContactForm","styled","Form","_templateObject","_taggedTemplateLiteral","ContactFormLabel","_templateObject2","ContactFormInput","Field","_templateObject3","ContactFormBtn","_templateObject4","initialValues","name","number","dispatch","useDispatch","useSelector","_jsxs","_Fragment","children","_jsx","Formik","onSubmit","values","_ref","resetForm","nameToLowerCase","toLowerCase","find","contact","toast","concat","addContact","htmlFor","type","id","pattern","title","required","ToastContainer","autoClose","theme","FilterInput","FilterLabel","onChange","e","setFilter","target","value","Contact","ContactBtn","onClick","deleteContact","contactsListFilter","filter","filterToLowerCase","includes","StyledContactList","filteredContactsList","map","ContactListItem","ContactsTitle","useEffect","fetchContacts","Loader","src","defaultImage","alt","className","ContactForm","Filter","ContactList"],"sourceRoot":""}